[{"/home/ada/IdeaProjects/jailbook/latestUI/src/App.jsx":"1","/home/ada/IdeaProjects/jailbook/latestUI/src/index.js":"2","/home/ada/IdeaProjects/jailbook/latestUI/src/HeistLookUp.jsx":"3","/home/ada/IdeaProjects/jailbook/latestUI/src/CreateHeist.jsx":"4"},{"size":7783,"mtime":1608572537903,"results":"5","hashOfConfig":"6"},{"size":496,"mtime":1608551493361,"results":"7","hashOfConfig":"6"},{"size":6194,"mtime":1608568486661,"results":"8","hashOfConfig":"6"},{"size":4846,"mtime":1608569546419,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xn278l",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ada/IdeaProjects/jailbook/latestUI/src/App.jsx",["19","20","21"],"/home/ada/IdeaProjects/jailbook/latestUI/src/index.js",[],"/home/ada/IdeaProjects/jailbook/latestUI/src/HeistLookUp.jsx",["22"],"import React from 'react'\nconst { render } = require(\"react-dom\");\nclass HeistLookup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modify: true,\n            showUpdate: false,\n            heistId: this.props.results.heistId,\n            heistDescription: this.props.results.heistDescription,\n            location: this.props.results.location,\n            mastermind: this.props.results.mastermind,\n            score: this.props.results.score,\n            startTimestamp: this.props.results.startTimestamp,\n            target: this.props.results.target,\n            title: this.props.results.title,\n            closeTimestamp: this.props.results.closeTimestamp,\n        }\n    }\n\n\n    handleChangeDescription = (e) => { //in use\n        this.setState({ heistDescription: e.target.value });\n    }\n\n    handleChangeLocation = (e) => { //in use\n        this.setState({ location: e.target.value });\n    }\n\n    handleChangeMastermind = (e) => { //in use\n        this.setState({ mastermind: e.target.value });\n    }\n    handleChangeScore = (e) => {//in use\n        this.setState({ score: e.target.value });\n    }\n    handleChangeStartTimeStamp = (e) => { //in use\n        this.setState({ startTimestamp: e.target.value });\n    }\n    handleChangeEndTimeStamp = (e) => {//in use\n        this.setState({ closeTimestamp: e.target.value });\n    }\n    handleChangeScore = (e) => {//in use\n        this.setState({ score: e.target.value });\n    }\n    handleChangeTarget = (e) => {//in use\n        this.setState({ target: e.target.value });\n    }\n\n    handleChangeTitle = (e) => { //in use\n        this.setState({ title: e.target.value });\n    }\n\n\n    handleClose = (e) => {\n        e.preventDefault();\n        let body = {\n            heistId: this.state.heistId,\n            heistDescription: this.state.heistDescription,\n            location: this.state.location,\n            mastermind: this.state.mastermind,\n            score: this.state.score,\n            startTimestamp: this.state.startTimestamp,\n            closeTimestamp: new Date().toISOString(),\n            target: this.state.target,\n            title: this.state.title\n        }\n        this.props.updateHeist(body);\n    }\n    handleUpdateMode = (e) => {\n        this.setState({ modify: !this.state.modify})\n        this.setState({ showUpdate: !this.state.showUpdate})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let body = {\n            heistId: this.state.heistId,\n            heistDescription: this.state.heistDescription,\n            location: this.state.location,\n            mastermind: this.state.mastermind,\n            score: this.state.score,\n            startTimestamp: this.state.startTimestamp,\n            closeTimestamp: this.state.closeTimestamp,\n            target: this.state.target,\n            title: this.state.title\n        }\n        this.props.updateHeist(body);\n    }\n\n    render() {\n        return (\n            <div>\n                <h2> View Heist</h2>\n                <form>\n                    <div class=\"form-group\">\n\n                        <label for=\"Title\">Title</label>\n                        <input type=\"text\" class=\"form-control\" id=\"title\" aria-describedby=\"Title\" placeholder={this.state.title} onChange={this.handleChangeTitle} disabled={this.state.modify}></input>\n\n                        <label for=\"mastermind\">MasterMind</label>\n                        <input type=\"text\" class=\"form-control\" id=\"mastermind\" aria-describedby=\"mastermind\" placeholder={this.state.mastermind} onChange={this.handleChangeMastermind} disabled={this.state.modify}></input>\n\n                    </div>\n                    <div class=\"form-group\">\n\n                        <label for=\"Target\">Target</label>\n                        <input type=\"text\" class=\"form-control\" id=\"target\" aria-describedby=\"Target\" placeholder={this.state.target} onChange={this.handleChangeTarget}disabled={this.state.modify}></input>\n\n                        <label for=\"location\">Location</label>\n                        <input type=\"text\" class=\"form-control\" id=\"location\" aria-describedby=\"Location\" placeholder={this.state.location} onChange={this.handleChangeLocation}disabled={this.state.modify}></input>\n\n                        <label for=\"Score\">Score</label>\n                        <input type=\"text\" class=\"form-control\" id=\"score\" aria-describedby=\"Score\" placeholder={this.state.score}onChange={this.handleChangeScore}disabled={this.state.modify}></input>\n\n\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"Description\">Description</label>\n                        <textarea rows=\"3\" class=\"form-control\" id=\"description\" aria-describedby=\"Description\"  placeholder={this.state.heistDescription} onChange={this.handleChangeDescription}disabled={this.state.modify}></textarea>\n                    </div>\n\n\n                    <div class=\"form-group\">\n                        <label for=\"starttimestamp\">Start Timestamp</label>\n                        <input type=\"text\" class=\"form-control\" id=\"starttimestamp\" aria-describedby=\"starttimestamp\" placeholder={this.state.startTimestamp} onChange={this.handleChangeStartTimeStamp}disabled={this.state.modify}></input>\n\n                        <label for=\"endtimestamp\">End Timestamp</label>\n                        <input type=\"text\" class=\"form-control\" id=\"endtimestamp\" aria-describedby=\"endtimestamp\" placeholder={this.state.closeTimestamp} onChange={this.handleChangeEndTimeStamp}disabled={this.state.modify}></input>\n\n                    </div>\n                    <button type=\"button\" onClick={this.handleUpdateMode} class=\"btn btn-warning\" hidden={this.state.showUpdate}>Modify</button>\n                    <button type=\"button\" onClick={this.handleSubmit} class=\"btn btn-primary\" hidden={!this.state.showUpdate}>Update</button>\n                    <button type=\"button\"  class=\"btn btn-danger padme\">Delete</button>\n                    <button type=\"button\"  onClick={this.handleClose} class=\"btn btn-success padme\">Close</button>\n                </form>\n            </div>\n        );\n    };\n}\n\nexport default HeistLookup","/home/ada/IdeaProjects/jailbook/latestUI/src/CreateHeist.jsx",["23"],{"ruleId":"24","severity":1,"message":"25","line":73,"column":13,"nodeType":"26","messageId":"27","endLine":73,"endColumn":17},{"ruleId":"28","severity":1,"message":"29","line":107,"column":21,"nodeType":"30","endLine":107,"endColumn":54},{"ruleId":"28","severity":1,"message":"29","line":119,"column":33,"nodeType":"30","endLine":119,"endColumn":119},{"ruleId":"24","severity":1,"message":"31","line":2,"column":9,"nodeType":"26","messageId":"27","endLine":2,"endColumn":15},{"ruleId":"24","severity":1,"message":"31","line":2,"column":9,"nodeType":"26","messageId":"27","endLine":2,"endColumn":15},"no-unused-vars","'link' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'render' is assigned a value but never used."]